die<- c(1:6)
sample(die,2,replace = TRUE)
}
roll <- function(){
die<- c(1:6)
dice<-sample(die,2,replace = TRUE)
sum(dice)
}
roll()
roll()
roll <- function(){
die<- c(1:6)
dice<-sample(die,2,replace = TRUE)
sum(dice)
dice
}
roll()
roll <- function(){
die<- c(1:6)
dice<-sample(die,2,replace = TRUE)
dice
sum(dice)
}
roll()
roll <- function(){
die<- c(1:6)
dice<-sample(die,2,replace = TRUE)
print(dice)
print(sum(dice))
}
roll <- function(){
die<- c(1:6)
dice<-sample(die,2,replace = TRUE)
print(dice)
print(sum(dice))
}
roll()
roll <- function(die){
dice<-sample(die,2,replace = TRUE)
print(dice)
print(sum(dice))
}
roll(die = c(1:6))
roll(die = c(1:6))
roll(die = c(1:6))
roll(die = c(1:6),2)
roll <- function(die,samplesize){
dice<-sample(die,samplesize,replace = TRUE)
print(dice)
print(sum(dice))
}
roll(die = c(1:6),2)
library(ggplot2)
library("qplot2")
library("qplot")
y<-x^2
x=c(1:7)
y<-x^2
qplot(x,y)
x<- c(0,1,1,2,2,2,3,3,4)
qplot(x,binwidth=1)
qplot(x,binwidth=2)
qplot(x,binwidth=1)
qplot(x,binwidth=2)
qplot(x,binwidth=0.5)
qplot(x,binwidth=2)
replicate(3,1+1)
replicate(6,roll(die = c(1:6,3)))
roll <- function(die,samplesize){
dice<-sample(die,samplesize,replace = TRUE)
print(dice)
#print(sum(dice))
}
replicate(6,roll(die = c(1:6,3)))
replicate(6,roll(die = c(1:6,2)))
replicate(6,roll(die = c(1:6),2))
roll <- function(die,samplesize){
dice<-sample(die,samplesize,replace = TRUE)
#print(dice)
#print(sum(dice))
}
replicate(6,roll(die = c(1:6),2))
replicate(10000,roll(die = c(1:6),2))
rolls<-replicate(10000,roll(die = c(1:6),2))
qplot(rolls,binwidth=1)
rolls<-replicate(10000,roll(die = c(1:6),2))
qplot(rolls,binwidth=1)
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE)
sum(dice) }
rolls<-replicate(10000,roll())
qplot(rolls,binwidth=1)
rolls<-replicate(10000,roll())
qplot(rolls,binwidth=1)
dice <- sample(die, size = 2, replace = FALSE)
sum(dice) }
rolls<-replicate(10000,roll())
qplot(rolls,binwidth=1)
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE,
prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice) }
rolls<- replicate(10000,roll())
qplot(rolls,binwidth=1)
rolls<- replicate(10,roll())
rolls
dice
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE,
prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
print(dice)
}
rolls<- replicate(10,roll())
rolls<- replicate(8,roll())
roll <- function() {
die <- 1:6
dice <- sample(die, size = 1, replace = TRUE,
prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
print(dice)
}
rolls<- replicate(8,roll())
card<-c(1,2,3,4,5)
is.vector(card)
card<-c(1,2,3,4,TRUE)
is.vector(card)
double<- c(1.1,1.2)
typeof(double)
double<- c(1,1.2)
typeof(double)
double<- c(1,1)
typeof(double)
double<- c(1.1L,1L)
typeof(double)
double<- c(1L,1L)
typeof(double)
double<- c("1",1L)
typeof(double)
double<- c("1",1)
typeof(double)
names(card)<- ("First","second","Third","Fourth","Boolean")
card<-c(1,2,3,4,TRUE)
names(card)<- ("First","second","Third","Fourth","Boolean")
names(card)<- c("First","second","Third","Fourth","Boolean")
card
die<- c(1:6)
die
dim(die)=c(2,3)
die
data1<- read.csv("Coffee.csv")
Summary(data1$Days_between_Purchase)
boxplot(data1$Days_between_Purchase)
Summary(data1$Days_between_Purchase)
Summary(data1$Days_between_Purchase)
str(data1)
new_data<- subset(data1,data1$Days_between_Purchase)
new_data<- (data1$Days_between_Purchase)
summary(new_data)
new_data<- subset(data1,data1$Days_between_Purchase<=50)
new_data
summary(new_data)
summary(data1$Days_between_Purchase)
summary(new_data$Days_between_Purchase)
library(readxl)
paired_sample_new <- read_excel("G:/Grreat lakes/Statistics/Election assignments/paired_sample_new.xlsx")
View(paired_sample_new)
paired_sample_new
mean(paired_sample_new$total_worth)
sd(paired_sample_new$total_worth)
a<-mean(paired_sample_new$total_worth)
b<-sd(paired_sample_new$total_worth)
(a/(b/sqrt(391)))
qt(0.95,391)
t.test(x=paired_sample_new$Net_worth_2014,y = paired_sample_new$net_worth_2009,alternative = "greater",mu = 0,paired = TRUE,var.equal = T,conf.level = 0.95)
paired_sample_new
view(paired_sample_new)
View(paired_sample_new)
library("xlsx")
write.xlsx(paired_sample_new,"G:/Grreat lakes/Statistics/Election assignments/Paired_sample_R.xlsx")
t.test(x=paired_sample_new$`Criminal Case`,y = paired_sample_new$`Criminal Case4`,alternative = "greater",mu = 0,paired = TRUE,var.equal = T,conf.level = 0.95)
paired_sample_new$`Criminal Case`
sd(paired_sample_new$`Criminal Case`)
sd(paired_sample_new$`Criminal Case4`)
var.test(x = paired_sample_new$`Criminal Case`,y =paired_sample_new$`Criminal Case4`,ratio = 1,alternative = "two.sided",conf.level = 0.95 )
var.test(x = paired_sample_new$Net_worth_2014,y =paired_sample_new$net_worth_2009,ratio = 1,alternative = "two.sided",conf.level = 0.95 )
d<- data.frame(score=rnorm(100,56,8),edu= sample(1:4,100,replace = T))
str(d)
d$edu<- as.factor(d$edu)
str(d)
levels(d$edu)<- c("E","C","Arts","Sci")
aov(score~edu,data=d)
aov(score~edu,data=d)->ft
summary(ft)
98/3
table(d$edu)
32.75/79.55
TukeyHSD(ft)
d$score<- ifelse(d$edu=="E",d$score+15,d$score)
aov(score~edu,data=d)
aov(score~edu,data=d)->ft
summary(ft)
d<- data.frame(score=rnorm(100,56,8),edu= sample(1:4,100,replace = T),gender=sample(1:2,100,replace = T))
str(d)
d$edu<- as.factor(d$edu)
str(d)
levels(d$edu)<- c("E","C","Arts","Sci")
d$gender=as.factor(d$gender)
levels(d$gender)-> c("M","F")
levels(d$gender)-> c("M","F")
levels(d$gender)<- c("M","F")
aov(score~edu+gender,data=d)->ft
summary(ft)
table(d$edu)
table(d$gender)
d$score<- ifelse(d$edu=="E",d$score+15,d$score)
aov(score~edu+gender,data=d)->ft
summary(ft)
TukeyHSD(ft)
interaction.plot(d$gender,d$edu,d$score)
interaction.plot(d$gender,d$score,d$edu)
interaction.plot(d$gender,d$score,d$edu)
interaction.plot(d$gender,d$edu,d$score)
interaction.plot(d$gender,d$score,d$edu)
interaction.plot(d$score,d$gender,d$edu)
interaction.plot(d$score,d$edu,d$gender)
interaction.plot(d$edu,d$gender,d$score)
aov(score~edu+gender+edu*gender,data=d)->ft
summary(ft)
TukeyHSD(ft)
d<- data.frame(1996=c(30000, 34000 ,36000 ,38000, 40000), 1997=c(30000 ,35000 ,37000, 38000, 40000),1998=c(40000,41000 ,43000, 44000 ,50000))
d<- data.frame(year1996=c(30000, 34000 ,36000 ,38000, 40000), year1997=c(30000 ,35000 ,37000, 38000, 40000),year1998=c(40000,41000 ,43000, 44000 ,50000))
str(d)
head(d)
aov(year1996~year1997,data=d)
aov(year1996~year1997,data=d)->ft
summary(ft)
mean(d$year1996)
aov(year1996~year1997+year1998,data=d)->ft
summary(ft)
mean(d$year1996)->as
aov(as~year1996+year1997+year1998,data=d)->ft
aov(mean(d$year1996)~year1997+year1998,data=d)->ft
aov(year1996~year1997+year1998,data=d)->ft
summary(ft)
aov(mean(year1996)~mean(year1997)+mean(year1998),data=d)->ft
summary(ft)
aov(mean(year1996)~mean(year1997),data=d)->ft
summary(ft)
setwd("G:/Grreat lakes/Advance stat/Group Assignment")
mydata<- read.csv("Expectations Evaluation.csv")
head(mydata)
str(mydata)
nrow(mydata)
mydata$Y2<- as.numeric(mydata$Y2)
mydata$Y1<- as.numeric(mydata$Y1)
outlier_upper=function(x){
q = quantile(x)
names(q) = NULL
q1 = q[2]
q3 = q[4]
QR = q3-q1
return(q3+1.5*QR);
}
outlier_lower=function(x){
q = quantile(x)
names(q) = NULL
q1 = q[2]
q3 = q[4]
QR = q3-q1
return(q1-1.5*QR);
}
Y2_upper = outlier_upper(mydata$Y2)
Y2_lower = outlier_lower(mydata$Y2)
Y1_upper = outlier_upper(mydata$Y1)
Y1_lower = outlier_lower(mydata$Y1)
mydata[mydata$Y2>Y2_upper | mydata$Y2<Y2_lower , ]
mydata[mydata$Y1>Y1_upper | mydata$Y1<Y1_lower , ]
mydata = subset( mydata, mydata$Y2<=Y2_upper & mydata$Y2>=Y2_lower)
mydata = subset( mydata, mydata$Y1<=Y1_upper & mydata$Y1>=Y1_lower)
nrow(mydata)
HI<-table(mydata$Expectatations.Manipulation,mydata$Quality.Manipulation)
aov(Y1~Quality.Manipulation,mydata)->ft
summary(ft)
TukeyHSD(ft)
aov(Y1~Expectatations.Manipulation,mydata)->ft
summary(ft)
TukeyHSD(ft)
aov(Y1~Expectatations.Manipulation+Quality.Manipulation,mydata)->ft
summary(ft)
HI<-table(mydata$Y1,mydata$Quality.Manipulation)
mean(HI[1,])
mean(HI[2,])
mean(HI[,1])
mean(HI[,2])
HI<-table(mydata$Y1,Expectatations.Manipulation)
HI<-table(mydata$Y1,mydata$Expectatations.Manipulation)
mean(HI[,1])
mean(HI[,2])
aov(Y1~Expectatations.Manipulation+Quality.Manipulation,mydata)->ft
summary(ft)
aov(Y1~Expectatations.Manipulation*Quality.Manipulation,mydata)->ft
summary(ft)
TukeyHSD(ft)
ft1<- lm(Y1~Quality.Manipulation,data=mydata)
summary(ft1)
ft1<- lm(Y1~.,data=mydata)
ft1<- lm(Y1~Quality.Manipulation,data=mydata)
summary(ft1)
plot(ft)
ft1<- lm(Y1~Quality.Manipulation,data=mydata)
summary(ft1)
train=sample(1:nrow(mydata),nrow(mydata)*0.80)
train
test=-train
test
training.data=mydata2[train,]
training.data=mydata[train,]
testing.data=mydata[test,]
c(nrow(training.data),nrow(testing.data))
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
summary(ft1)
Quality.Manipulation<-data.frame(Quality.Manipulation=c(testing.data$Quality.Manipulation))
predict(ft1,"b")
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
summary(ft1)
predict(ft1,"b")
Quality.Manipulation <- as.data.frame("b")
predict(ft1,Quality.Manipulation)
Quality.Manipulation <- as.data.frame(training.data$Quality.Manipulation="b")
Quality.Manipulation <- as.data.frame(training.data$Quality.Manipulation ="b")
Quality.Manipulation <- as.data.frame("b")
predict(ft1,Quality.Manipulation)
Quality.Manipulation <- as.data.frame(c(training.data$Quality.Manipulation="b")
predict(ft1,b)
head(training.data)
training.data$Quality.Manipulation<- as.data.frame("b")
predict(ft1,"b")
str(training.data$Quality.Manipulatio)
predict(ft1,training.data$Quality.Manipulation)
predict(ft1,as.data.frame("b"))
Quality.Manipulation<- ("b")
predict(ft1,as.data.frame("b"))
Quality.Manipulation<-data.frame(Quality.Manipulation=c(testing.data$Quality.Manipulation))
predict(ft1,Quality.Manipulation)
Quality.Manipulation<-data.frame((testing.data$Quality.Manipulation))
predict(ft1,Quality.Manipulation)
Quality.Manipulation<-as.data.frame((testing.data$Quality.Manipulation))
predict(ft1,Quality.Manipulation)
Quality.Manipulation<- ("b")
predict(ft1,Quality.Manipulation)
predict(ft1,as.data.frame("b"))
predict(ft1,as.data.frame(testing.data$Quality.Manipulation))
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
summary(ft1)
predict(ft1,as.data.frame(testing.data$Quality.Manipulation))
predict(ft1,as.data.frame(c(testing.data$Quality.Manipulation)
predict(ft1,as.data.frame(c(testing.data$Quality.Manipulation)
)plot(ft)
predict(ft1,as.data.frame(testing.data$Quality.Manipulation))
Quality.Manipulation<-as.data.frame(testing.data$Quality.Manipulation)
predict(ft1,Quality.Manipulation)
str(Quality.Manipulation)
predict(ft1,as.data.frame(Quality.Manipulation))
Quality.Manipulation<-as.data.frame("Quality.Manipulation"=testing.data$Quality.Manipulation)
Quality.Manipulation<-as.data.frame(c("Quality.Manipulation"=testing.data$Quality.Manipulation))
predict(ft1,as.data.frame(Quality.Manipulation))
Quality.Manipulation1<-as.data.frame(c("Quality.Manipulation"=testing.data$Quality.Manipulation))
predict(ft1,Quality.Manipulation1)
head(testing.data)
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
Quality.Manipulation1<-data.frame(c("Quality.Manipulation"=testing.data$Quality.Manipulation))
predict(ft1,Quality.Manipulation1)
Quality.Manipulation<- ("b")
str(Quality.Manipulation)
predict(ft1,Quality.Manipulation)
Quality.Manipulation<- data.frame("b")
predict(ft1,Quality.Manipulation)
predict.lm(ft1, newdata=testing.data$Quality.Manipulation)
Quality.Manipulation1<-data.frame(c("Quality.Manipulation"=testing.data$Quality.Manipulation))
predict.lm(ft1, newdata=Quality.Manipulation1)
predict(ft1,Quality.Manipulation1)
Quality.Manipulation<- data.frame("b")
predict.lm(ft1, newdata=Quality.Manipulation)
predict.lm(ft1)
predict(ft1)
Quality.Manipulation1<-data.frame(c("Quality.Manipulation"=testing.data$Quality.Manipulation))
nrow(Quality.Manipulation1)
str(Quality.Manipulation1)
predict(ft1,as.data.frame("b"))
Quality.Manipulation<- data.frame("b")
predict(ft1,as.data.frame("b"))
predict(ft1,data.frame("b"))
Quality.Manipulation<- data.frame("b")
predict(ft1,data.frame("b"))
predict(ft1,data.frame(Quality.Manipulation))
predict(ft1,"b")
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
summary(ft1)
predict(ft1,"b")
predict(ft1,data.frame("b"))
Quality.Manipulation<- data.frame("b")
predict(ft1,data.frame("b"))
str(Quality.Manipulation)
Quality.Manipulation<- data.frame(testing.data$Quality.Manipulation)
str(Quality.Manipulation)
predict(ft1,data.frame("b"))
predict(ft1,data.frame("b"))
predict(ft1,data.frame("b"))
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
summary(ft1)
train=sample(1:nrow(mydata),nrow(mydata)*0.80)
train
test=-train
test
training.data=mydata[train,]
testing.data=mydata[test,]
c(nrow(training.data),nrow(testing.data))
head(training.data)
head(testing.data)
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
summary(ft1)
predict(ft1,data.frame("b"))
Quality.Manipulation<- data.frame(testing.data$Quality.Manipulation)
predict(ft1,Quality.Manipulation)
str(Quality.Manipulation)
setwd("G:/Grreat lakes/Advance stat/Group Assignment")
mydata<- read.csv("Expectations Evaluation.csv")
head(mydata)
str(mydata)
nrow(mydata)
mydata$Y2<- as.numeric(mydata$Y2)
mydata$Y1<- as.numeric(mydata$Y1)
outlier_upper=function(x){
q = quantile(x)
names(q) = NULL
q1 = q[2]
q3 = q[4]
QR = q3-q1
return(q3+1.5*QR);
}
outlier_lower=function(x){
q = quantile(x)
names(q) = NULL
q1 = q[2]
q3 = q[4]
QR = q3-q1
return(q1-1.5*QR);
}
Y2_upper = outlier_upper(mydata$Y2)
Y1_upper = outlier_upper(mydata$Y1)
Y1_lower = outlier_lower(mydata$Y1)
mydata[mydata$Y1>Y1_upper | mydata$Y1<Y1_lower , ]
mydata = subset( mydata, mydata$Y2<=Y2_upper & mydata$Y2>=Y2_lower)
mydata = subset( mydata, mydata$Y1<=Y1_upper & mydata$Y1>=Y1_lower)
HI<-table(mydata$Expectatations.Manipulation,mydata$Quality.Manipulation)
nrow(mydata)
mydata[mydata$Y2>Y2_upper | mydata$Y2<Y2_lower , ]
aov(Y1~Quality.Manipulation,mydata)->ft
Y2_lower = outlier_lower(mydata$Y2)
summary(ft)
TukeyHSD(ft)
HI<-table(mydata$Y1,mydata$Quality.Manipulation)
mean(HI[,2])
aov(Y1~Expectatations.Manipulation,mydata)->ft
summary(ft)
TukeyHSD(ft)
mean(HI[,1])
HI<-table(mydata$Y1,mydata$Expectatations.Manipulation)
mean(HI[,1])
mean(HI[,2])
aov(Y1~Expectatations.Manipulation+Quality.Manipulation,mydata)->ft
summary(ft)
aov(Y1~Expectatations.Manipulation*Quality.Manipulation,mydata)->ft
summary(ft)
set.seed(1)
TukeyHSD(ft)
train=sample(1:nrow(mydata),nrow(mydata)*0.80)
train
test=-train
test
training.data=mydata[train,]
testing.data=mydata[test,]
c(nrow(training.data),nrow(testing.data))
head(training.data)
head(testing.data)
ft1<- lm(Y1~Quality.Manipulation,data=training.data)
summary(ft1)
str(training.data$Quality.Manipulatio)
predictdata<-data.frame(c("Quality.Manipulation"=testing.data$Quality.Manipulation))
str(predictdata)
testingpredictdata<- data.frame(testing.data$Quality.Manipulation)
testdata<- data.frame("b")
predict(ft1,predictdata)
predict(ft1,testingpredictdata)
predict(ft1,testdata)
predict(ft1,as.data.frame("b"))
predict(ft1)
predict(ft1,as.factor("b"))
predict(ft1,data.frame("b"))
str(training.data$Quality.Manipulatio)
predict(ft1,"b")
predict(ft1,c("b"))
predict(ft1,data.frame(c("b","g")))
ft1<- lm(Y1~Quality.Manipulation,data=mydata)
summary(ft1)
mydata$score<-predict(ft1)
view(mydata)
View(mydata)
